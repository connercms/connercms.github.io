{"version":3,"sources":["components/footer/Footer.js","styles.js","components/about/styles.js","components/about/About.js","App.js","serviceWorker.js","index.js"],"names":["Footer","style","styles","container","href","target","icon","alignItems","display","flexDirection","height","padding","color","backgroundColor","width","borderRadius","margin","justifyContent","flex","logo","menuBar","menuItem","link","fontFamily","fontWeight","textDecoration","textTransform","contentContainer","image","maxHeight","maxWidth","boxShadow","innerContainer","paragraph","fontSize","About","alt","src","Main","Header","Content","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44bdf44b.chunk.js","sourcesContent":["import React from \"react\";\nimport Mail from \"@material-ui/icons/Mail\";\nimport LinkedIn from \"@material-ui/icons/LinkedIn\";\n\nexport default function Footer() {\n  return (\n    <div style={styles.container}>\n      <a href=\"mailto:connercms@gmail.com?Subject=Hello%20there\" target=\"_top\">\n        <Mail style={styles.icon} />\n      </a>\n      <a href=\"http://www.linkedin.com/in/conner-shannon\">\n        <LinkedIn style={styles.icon} />\n      </a>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 100,\n    padding: 16\n  },\n  icon: {\n    color: \"white\",\n    backgroundColor: \"black\",\n    height: 30,\n    width: 30,\n    borderRadius: 40 / 2,\n    padding: 5,\n    margin: 8\n  }\n};\n","export default {\n  container: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    flex: 1\n  },\n  logo: {\n    height: 150\n  },\n  menuBar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  menuItem: {\n    margin: 16\n  },\n  link: {\n    color: \"#009ea3\",\n    fontFamily: \"Courier New\",\n    fontWeight: 600,\n    textDecoration: \"none\",\n    textTransform: \"uppercase\"\n  }\n};\n","export default {\n  container: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"row\",\n    margin: 16\n  },\n  contentContainer: {\n    display: \"flex\",\n    flex: 1,\n    padding: 16\n  },\n  image: {\n    height: 125,\n    maxHeight: 125,\n    width: 125,\n    maxWidth: 125,\n    borderRadius: 125 / 2,\n    boxShadow: \"0 0 12px black\",\n    margin: 50\n  },\n  innerContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  paragraph: {\n    color: \"gray\",\n    fontSize: 14\n  }\n};\n","import React from \"react\";\nimport styles from \"./styles.js\";\n\nexport default function About() {\n  return (\n    <div style={styles.container}>\n      <img alt=\"profile\" style={styles.image} src=\"/images/conner.circle.png\" />\n      <div style={styles.contentContainer}>\n        <div style={styles.innerContainer}>\n          <p style={styles.paragraph}>{\"Hi, I'm Conner.\"}</p>\n          <p style={styles.paragraph}>\n            {\"Recently new resident of \"}\n            <span style={{ color: \"#009ea3\", fontWeight: \"bold\" }}>\n              {\"Ankeny, IA.\"}\n            </span>\n          </p>\n          <p style={styles.paragraph}>{\"Father. Software developer.\"}</p>\n          <p style={styles.paragraph}>\n            {\n              \"Interested in exercise, video games, spending time with my wife and our baby boy, or friends.\"\n            }\n          </p>\n          <p style={styles.paragraph}>\n            {\n              \"I like to dabble in different technologies in my spare time. Currently on day 46+ of \"\n            }\n            <a\n              style={styles.link}\n              href=\"https://www.hackingwithswift.com/100/swiftui\"\n            >\n              {\"100 Days of SwiftUI\"}\n            </a>\n            {\" and teaching myself C and C++. I am currently reading the book \"}\n            <i>{\"Code\"}</i>\n            {\n              \" by Charles Petzold, and would eventually like to tinker with embedded systems programming.\"\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {} from \"@material-ui/core\";\nimport Footer from \"./components/footer/Footer\";\nimport styles from \"./styles\";\n\nimport About from \"./components/about/About\";\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <Main />\n      </Router>\n    </div>\n  );\n}\n\nfunction Main() {\n  return (\n    <div>\n      <Header />\n      <Content />\n      <Footer />\n    </div>\n  );\n}\n\nfunction Header() {\n  return (\n    <div style={styles.container}>\n      <img alt=\"logo\" src=\"/images/logo.png\" style={styles.logo} />\n\n      <div style={styles.menuBar}>\n        <div style={styles.menuItem}>\n          <Link style={styles.link} to=\"/\">\n            <p>About</p>\n          </Link>\n        </div>\n        <div style={styles.menuItem}>\n          <Link style={styles.link} to=\"/work\">\n            <p>Work</p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Content() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <About />\n      </Route>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n    </Switch>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}